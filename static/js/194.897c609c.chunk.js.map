{"version":3,"file":"static/js/194.897c609c.chunk.js","mappings":"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","sources":["components/Auth/AuthForm.jsx","components/Auth/AuthSocial.jsx","routes/Auth.jsx"],"sourcesContent":["import { auth, set_user_doc } from 'fbase';\r\nimport {\r\n  browserSessionPersistence,\r\n  createUserWithEmailAndPassword,\r\n  setPersistence,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\nimport { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        // 회원가입\r\n        setPersistence(auth, browserSessionPersistence).then(() => {\r\n          createUserWithEmailAndPassword(auth, email, password).then((res) => {\r\n            set_user_doc(res.user);\r\n          });\r\n        });\r\n      } else {\r\n        // 로그인\r\n        setPersistence(auth, browserSessionPersistence).then(() => {\r\n          signInWithEmailAndPassword(auth, email, password);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = (type) => setNewAccount(type);\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <ul className=\"hometab auth\">\r\n          <li onClick={() => toggleAccount(false)} className={!newAccount ? 'on' : ''}>\r\n            LOGIN\r\n          </li>\r\n          <li onClick={() => toggleAccount(true)} className={newAccount ? 'on' : ''}>\r\n            JOIN\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <form action=\"\" onSubmit={onSubmit} className=\"container\">\r\n        <input type=\"email\" placeholder=\"email\" name=\"email\" required onChange={onChange} className=\"authInput\" />\r\n        {/* [DOM] Input elements should have autocomplete attributes (suggested: \"current-password\"): (More info: https://goo.gl/9p2vKq) 오류로 autoComplete off 추가 */}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <input type=\"submit\" value={newAccount ? 'JOIN' : 'LOGIN'} className=\"authInput authSubmit\" />\r\n      </form>\r\n      {error && <span className=\"authError\">{error}</span>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { faGithub, faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { set_user_doc, auth } from 'fbase';\r\nimport {\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  browserSessionPersistence,\r\n  setPersistence,\r\n  signInWithPopup,\r\n} from 'firebase/auth';\r\n\r\nconst AuthSocial = () => {\r\n  const onSocialClick = (e) => {\r\n    const { name } = e.target;\r\n    let provide;\r\n    switch (name) {\r\n      case 'google':\r\n        provide = new GoogleAuthProvider();\r\n        break;\r\n      case 'github':\r\n        provide = new GithubAuthProvider();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setPersistence(auth, browserSessionPersistence).then(() => {\r\n      signInWithPopup(auth, provide).then(({ user }) => {\r\n        const {\r\n          reloadUserInfo: { createdAt, lastLoginAt },\r\n        } = user;\r\n        if (createdAt === lastLoginAt) {\r\n          set_user_doc(user);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"authBtns\">\r\n      <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n        Google Login <FontAwesomeIcon icon={faGoogle} />\r\n      </button>\r\n      <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n        Github Login <FontAwesomeIcon icon={faGithub} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthSocial;\r\n","import AuthForm from 'components/Auth/AuthForm';\r\nimport AuthSocial from 'components/Auth/AuthSocial';\r\nimport { motion } from 'framer-motion';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Auth = () => {\r\n  const isLogin = useSelector((state) => state.user.isLogin);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (isLogin) navigate('/');\r\n  }, [isLogin]);\r\n\r\n  return (\r\n    <>\r\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} className=\"authContainer\">\r\n        <AuthForm />\r\n        <AuthSocial />\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\nexport default Auth;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","newAccount","setNewAccount","_useState7","_useState8","error","setError","onChange","e","_e$target","target","name","value","toggleAccount","type","_jsxs","_Fragment","children","_jsx","className","onClick","action","onSubmit","preventDefault","setPersistence","auth","browserSessionPersistence","then","createUserWithEmailAndPassword","res","set_user_doc","user","signInWithEmailAndPassword","message","placeholder","required","autoComplete","onSocialClick","provide","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","_ref","_user$reloadUserInfo","reloadUserInfo","createdAt","lastLoginAt","FontAwesomeIcon","icon","faGoogle","faGithub","isLogin","useSelector","state","navigate","useNavigate","useEffect","motion","div","initial","opacity","animate","exit","AuthForm","AuthSocial"],"sourceRoot":""}